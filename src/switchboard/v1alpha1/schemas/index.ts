import { components } from '../generated/api.ts';

export type App = components['schemas']['App'];
export type AppAuthConfig = components['schemas']['AppAuthConfig'];
export type AppAuthConfigData = components['schemas']['AppAuthConfigData'];
export type AppAuthConfigOIDC = components['schemas']['AppAuthConfigOIDC'];
export type AppAuthConfigOAuth2 = components['schemas']['AppAuthConfigOAuth2'];
export type AppAuthConfigApiKey = components['schemas']['AppAuthConfigApiKey'];
export type AppAuthConfigHTTPBasicAuth = components['schemas']['AppAuthConfigHTTPBasicAuth'];
export type AppAuthConfigHTTPRefresh = components['schemas']['AppAuthConfigHTTPRefresh'];
export type AppAuthConfigCreate = components['schemas']['AppAuthConfigCreate'];
export type Hub = components['schemas']['Hub'];
export type HubBoardUsers = components['schemas']['HubBoardUsers'];
export type HubBoardUser = components['schemas']['HubBoardUser'];
export type Board = components['schemas']['Board'];
export type BoardCreate = components['schemas']['BoardCreate'];
export type HubBoardCreate = components['schemas']['HubBoardCreate'];
export type BoardPublishCommand = components['schemas']['BoardPublishCommand'];
export type BoardUnpublishCommand = components['schemas']['BoardUnpublishCommand'];
export type BoardPublishResult = components['schemas']['BoardPublishResult'];
export type BoardUnpublishResult = components['schemas']['BoardUnpublishResult'];
export type BoardPublishResultMessage = components['schemas']['BoardPublishResultMessage'];
export type BoardStatus = components['schemas']['BoardStatus'];
export type BoardPublishInfo = components['schemas']['BoardPublishInfo'];
export type BoardListener = components['schemas']['BoardListener'];
export type BoardsPage = components['schemas']['BoardsPage'];
export type HubsPage = components['schemas']['HubsPage'];
export type Connection = components['schemas']['Connection'];
export type ConnectionBoardReference = components['schemas']['ConnectionBoardReference'];
export type CreateConnectionRequestBody = components['schemas']['CreateConnectionRequestBody'];
export type UpdateConnectionRequestBody = components['schemas']['UpdateConnectionRequestBody'];
export type ConnectionDataAPIKey = components['schemas']['ConnectionDataAPIKey'];
export type ConnectionDataHTTPBasicAuth = components['schemas']['ConnectionDataHTTPBasicAuth'];
export type ConnectionDataSecret = components['schemas']['ConnectionDataSecret'];
export type ConnectionDataOAuth2ClientCredentials = components['schemas']['ConnectionDataOAuth2ClientCredentials'];
export type ConnectedAppsPage = components['schemas']['ConnectedAppsPage'];
export type ConnectedApp = components['schemas']['ConnectedApp'];
export type ConnectionOverview = components['schemas']['ConnectionOverview'];
export type ConnectionsPage = components['schemas']['ConnectionsPage'];
export type InitConnectionRequestBody = components['schemas']['InitConnectionRequestBody'];
export type InitConnectionResponseBody = components['schemas']['InitConnectionResponseBody'];
export type InitConnectionAction = components['schemas']['InitConnectionAction'];
export type InitConnectionActionRedirect = components['schemas']['InitConnectionActionRedirect'];
export type InitConnectionActionForm = components['schemas']['InitConnectionActionForm'];
export type SchemaSignedURLResponseBody = components['schemas']['SchemaSignedURLResponseBody'];
export type SignedURLResponseBody = components['schemas']['SignedURLResponseBody'];
export type CreateCredentialRequestBody = components['schemas']['CreateCredentialRequestBody'];
export type CredentialType = components['schemas']['CredentialType'];
export type CredentialDataOAuth2Refresh = components['schemas']['CredentialDataOAuth2Refresh'];
export type CredentialDataRaw = components['schemas']['CredentialDataRaw'];
export type CredentialDataBasicAuth = components['schemas']['CredentialDataBasicAuth'];
export type Server = components['schemas']['Server'];
export type Scopes = components['schemas']['Scopes'];
export type PageInfo = components['schemas']['PageInfo'];
export type BoardVariablesSchema = components['schemas']['BoardVariablesSchema'];
export type VariablesSchema = components['schemas']['VariablesSchema'];
export type Error = components['schemas']['Error'];
export type ConnectIntegration = components['schemas']['ConnectIntegration'];
