import { components } from '../generated/api.ts';

export type TransformerPreviewInput = components['schemas']['TransformerPreviewInput']
export type TransformerPreviewOutput = components['schemas']['TransformerPreviewOutput']
export type App = components['schemas']['App']
export type SchemaMetadata = components['schemas']['SchemaMetadata']
export type Schema = components['schemas']['Schema']
export type SchemaComponent = components['schemas']['SchemaComponent']
export type SchemaComponentsPage = components['schemas']['SchemaComponentsPage']
export type CreateSchemaComponentsRequestBody = components['schemas']['CreateSchemaComponentsRequestBody']
export type DeleteSchemaComponentsRequestBody = components['schemas']['DeleteSchemaComponentsRequestBody']
export type SchemaCreate = components['schemas']['SchemaCreate']
export type SchemaImportJob = components['schemas']['SchemaImportJob']
export type SchemaImportJobMessage = components['schemas']['SchemaImportJobMessage']
export type AppAuthConfig = components['schemas']['AppAuthConfig']
export type AppAuthConfigData = components['schemas']['AppAuthConfigData']
export type AppAuthConfigOIDC = components['schemas']['AppAuthConfigOIDC']
export type AppAuthConfigOAuth2 = components['schemas']['AppAuthConfigOAuth2']
export type AppAuthConfigApiKey = components['schemas']['AppAuthConfigApiKey']
export type AppAuthConfigHTTPBasicAuth = components['schemas']['AppAuthConfigHTTPBasicAuth']
export type AppAuthConfigHTTPRefresh = components['schemas']['AppAuthConfigHTTPRefresh']
export type AppAuthConfigCreate = components['schemas']['AppAuthConfigCreate']
export type AppsPage = components['schemas']['AppsPage']
export type SchemasPage = components['schemas']['SchemasPage']
export type AppCreate = components['schemas']['AppCreate']
export type BoardNode = components['schemas']['BoardNode']
export type BoardNodesPage = components['schemas']['BoardNodesPage']
export type ExecutionLogNode = components['schemas']['ExecutionLogNode']
export type ExecutionLogInfo = components['schemas']['ExecutionLogInfo']
export type ExecutionLogNodesPage = components['schemas']['ExecutionLogNodesPage']
export type ExecutionLogMsg = components['schemas']['ExecutionLogMsg']
export type Operation = components['schemas']['Operation']
export type OperationsPage = components['schemas']['OperationsPage']
export type OperationParameter = components['schemas']['OperationParameter']
export type OperationRequest = components['schemas']['OperationRequest']
export type OperationResponse = components['schemas']['OperationResponse']
export type OperationCallbacks = components['schemas']['OperationCallbacks']
export type OperationSchema = components['schemas']['OperationSchema']
export type Hub = components['schemas']['Hub']
export type HubCreate = components['schemas']['HubCreate']
export type HubBoardUsers = components['schemas']['HubBoardUsers']
export type HubBoardUser = components['schemas']['HubBoardUser']
export type Board = components['schemas']['Board']
export type BoardCreate = components['schemas']['BoardCreate']
export type HubBoardCreate = components['schemas']['HubBoardCreate']
export type BoardPublishCommand = components['schemas']['BoardPublishCommand']
export type BoardUnpublishCommand = components['schemas']['BoardUnpublishCommand']
export type BoardPublishResult = components['schemas']['BoardPublishResult']
export type BoardUnpublishResult = components['schemas']['BoardUnpublishResult']
export type BoardPublishResultMessage = components['schemas']['BoardPublishResultMessage']
export type BoardStatus = components['schemas']['BoardStatus']
export type BoardPublishInfo = components['schemas']['BoardPublishInfo']
export type BoardListener = components['schemas']['BoardListener']
export type BoardsPage = components['schemas']['BoardsPage']
export type HubsPage = components['schemas']['HubsPage']
export type TriggerBoardExecution = components['schemas']['TriggerBoardExecution']
export type BoardTriggered = components['schemas']['BoardTriggered']
export type BoardNodeTriggered = components['schemas']['BoardNodeTriggered']
export type DataMappingDefinition = components['schemas']['DataMappingDefinition']
export type DataMapping = components['schemas']['DataMapping']
export type DataMappingsPage = components['schemas']['DataMappingsPage']
export type DataMappingCreate = components['schemas']['DataMappingCreate']
export type DataMappingUpdate = components['schemas']['DataMappingUpdate']
export type DataMappingEntry = components['schemas']['DataMappingEntry']
export type DataMappingEntriesPage = components['schemas']['DataMappingEntriesPage']
export type DataMappingEntryCreate = components['schemas']['DataMappingEntryCreate']
export type DataMappingEntryUpdate = components['schemas']['DataMappingEntryUpdate']
export type Connection = components['schemas']['Connection']
export type ConnectionBoardReference = components['schemas']['ConnectionBoardReference']
export type CreateConnectionRequestBody = components['schemas']['CreateConnectionRequestBody']
export type UpdateConnectionRequestBody = components['schemas']['UpdateConnectionRequestBody']
export type ConnectionDataAPIKey = components['schemas']['ConnectionDataAPIKey']
export type ConnectionDataHTTPBasicAuth = components['schemas']['ConnectionDataHTTPBasicAuth']
export type ConnectionDataSecret = components['schemas']['ConnectionDataSecret']
export type ConnectionDataOAuth2ClientCredentials = components['schemas']['ConnectionDataOAuth2ClientCredentials']
export type ConnectedAppsPage = components['schemas']['ConnectedAppsPage']
export type ConnectedApp = components['schemas']['ConnectedApp']
export type ConnectionOverview = components['schemas']['ConnectionOverview']
export type ConnectionsPage = components['schemas']['ConnectionsPage']
export type InitConnectionRequestBody = components['schemas']['InitConnectionRequestBody']
export type InitConnectionResponseBody = components['schemas']['InitConnectionResponseBody']
export type InitConnectionAction = components['schemas']['InitConnectionAction']
export type InitConnectionActionRedirect = components['schemas']['InitConnectionActionRedirect']
export type InitConnectionActionForm = components['schemas']['InitConnectionActionForm']
export type SchemaSignedURLResponseBody = components['schemas']['SchemaSignedURLResponseBody']
export type SignedURLResponseBody = components['schemas']['SignedURLResponseBody']
export type ImportSchemaFromURLRequestBody = components['schemas']['ImportSchemaFromURLRequestBody']
export type UploadSchemaFromURLRequestBody = components['schemas']['UploadSchemaFromURLRequestBody']
export type UploadSchemaFromURLResponseBody = components['schemas']['UploadSchemaFromURLResponseBody']
export type SchemaInfoRequestBody = components['schemas']['SchemaInfoRequestBody']
export type SchemaInfo = components['schemas']['SchemaInfo']
export type CreateCredentialRequestBody = components['schemas']['CreateCredentialRequestBody']
export type UpdateCredentialRequestBody = components['schemas']['UpdateCredentialRequestBody']
export type CredentialsPage = components['schemas']['CredentialsPage']
export type Credential = components['schemas']['Credential']
export type CredentialType = components['schemas']['CredentialType']
export type CredentialDataOAuth2Refresh = components['schemas']['CredentialDataOAuth2Refresh']
export type CredentialDataRaw = components['schemas']['CredentialDataRaw']
export type CredentialDataBasicAuth = components['schemas']['CredentialDataBasicAuth']
export type Server = components['schemas']['Server']
export type Scopes = components['schemas']['Scopes']
export type DeletedResource = components['schemas']['DeletedResource']
export type PageInfo = components['schemas']['PageInfo']
export type BoardVariablesSchema = components['schemas']['BoardVariablesSchema']
export type VariablesSchema = components['schemas']['VariablesSchema']
export type EmptySchema = components['schemas']['EmptySchema']
export type Error = components['schemas']['Error']
